import matplotlib.pyplot as plt
import numpy as np
from scipy.stats import beta

# parameters to generate data
mu = 0.9
N = 200

# generate data
X = np.random.binomial(1,mu,N)
mu_test = np.linspace(0,1,100)

# define prior
a = 5.0
b = 5.0

# p(mu) = Beta(alpha, beta)
prior_mu = beta.pdf(mu_test,a,b)

plt.plot(mu_test, prior_mu)
plt.show()


# posterior
def posterior(X):
    a_n = a + X.sum()
    b_n = b + (X.shape[0] - X.sum())
    return beta.pdf(mu_test,a_n,b_n)

# create figure
fig = plt.figure(figsize=(10,5))
ax = fig.add_subplot(111)
ax.set_xlabel('$\mu$')
ax.set_ylabel('$p(\mu|x)$')

# plot prior
ax.plot(mu_test,prior_mu,'b')
ax.fill_between(mu_test,prior_mu,color='blue',alpha=0.3)

# randomly select points from data
index = np.random.permutation(X.shape[0])

# update assumption (set posterior (n) as prior (n+1)
for i in range(0,X.shape[0]):
    # plot posterior
    y = posterior(X[:index[i]])
    ax.plot(mu_test,y,'r', alpha=0.3)

plt.show()